{"version":3,"sources":["assets/logo.png","constants/media.ts","components/elements/Page.tsx","components/elements/Input.tsx","components/elements/InputItem.tsx","constants/color.ts","components/elements/Button.tsx","api/url.ts","api/client.ts","components/auth/SignUp.tsx","hooks/useIsLogin.ts","pages/SignUpPage.tsx","api/auth.ts","store/auth.ts","components/auth/LogIn.tsx","pages/LoginPage.tsx","components/modal/ModalProvider.tsx","hooks/useModal.ts","components/modal/Modal.tsx","components/user/Profile.tsx","components/modal/MenuModal.tsx","components/Modals.tsx","components/search/Search.tsx","components/Layout.tsx","components/arts/Art.tsx","hooks/useClient.ts","components/arts/Arts.tsx","pages/IndexPage.tsx","components/elements/Textarea.tsx","components/bid/WriteBid.tsx","pages/WritePage.tsx","components/bid/Bid.tsx","components/bid/BidList.tsx","pages/BidListPage.tsx","components/profile/ProfileBio.tsx","pages/ProfilePage.tsx","components/arts/WriteProject.tsx","pages/ProjectWritePage.tsx","pages/ProjectPage.tsx","pages/index.tsx","App.tsx","serviceWorker.ts","store/index.ts","index.tsx"],"names":["module","exports","media","small","Page","styled","div","css","Input","input","shadow","fullWidth","block","Wrap","InputItem","fieldName","name","type","error","props","className","color","primary","isLight","colorCode","code","slice","map","v","parseInt","reduce","a","b","Button","button","API_URL","getNetworkError","e","response","data","message","client","axios","create","baseURL","initialValues","email","password","passwordAccept","username","role","Form","form","SignUp","history","useHistory","onSubmit","useCallback","values","helper","setSubmitting","post","userid","nickname","alert","replace","console","validate","errors","match","handleChange","handleBlur","handleSubmit","setFieldValue","isSubmitting","onChange","onBlur","value","checked","disabled","useIsLogin","useSelector","state","auth","accessToken","refreshToken","useIsLoginRedirect","to","isLogin","useEffect","style","SignUpPage","login","request","token","access","refresh","localStorage","setItem","initialState","getItem","undefined","authSlice","createSlice","reducers","setToken","action","payload","LogIn","dispatch","useDispatch","tokens","actions","logo","IndexPage","aria-label","ModalContext","createContext","modal","changeState","ModalProvider","children","useState","setModal","key","Provider","useModal","modalName","useContext","isShow","close","show","Background","Modal","onClick","size","Profile","Menu","MenuModal","Modals","Search","Layout","menuModal","ArtDiv","image","Art","_id","title","useClient","useMemo","headers","Arts","useQuery","get","isLoading","Textarea","textarea","letter","details","price","WriteBid","placeholder","rows","flex","WritePage","Card","Bid","List","BidList","BidListPage","Bio","ProfileBio","ProfilePage","marginTop","WriteProject","formData","FormData","append","req","id","push","currentTarget","files","accept","ProjectWritePage","ArtSection","section","ProjectPage","params","description","src","alt","Routes","path","component","exact","LoginPage","App","Boolean","window","location","hostname","reducer","combineReducers","store","configureStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8429ed65.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.40741e13.png\";","const media = {\n  small: \"400px\",\n};\n\nexport default media;\n","import styled, { FlattenSimpleInterpolation } from \"styled-components\";\nimport media from \"constants/media\";\n\ninterface PageProps {\n  css?: FlattenSimpleInterpolation;\n}\nconst Page = styled.div<PageProps>`\n  padding: 5vh 10%;\n  ${({ css }) => css}\n  \n  @media screen and (max-width: ${media.small}) {\n    padding: 24px 16px;\n  }\n`;\n\nexport default Page;\n","import styled, { css } from \"styled-components\";\n\nexport interface InputProps {\n  shadow?: boolean | string;\n  fullWidth?: boolean;\n  block?: boolean;\n}\nconst Input = styled.input<InputProps>`\n  border: 0;\n  padding: 1em 1.5em;\n  background: #f2f2f2;\n  box-sizing: border-box;\n  border-radius: 1em;\n  ${({ shadow }) =>\n    shadow &&\n    css`\n      box-shadow: 2px 2px 5px -1px ${typeof shadow === \"string\" ? shadow : \"#f2f2f2\"};\n    `}\n    ${({ fullWidth, block }) =>\n      (fullWidth || block) &&\n      css`\n        display: block;\n      `}\n    ${({ fullWidth }) =>\n      fullWidth &&\n      css`\n        width: 100%;\n      `}\n  :focus {\n    outline: 0;\n  }\n`;\n\nexport default Input;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Input from \"./Input\";\n\ninterface SignUpInputProps {\n  fieldName: string;\n  name: string;\n  type?: string;\n  error?: string;\n}\nfunction InputItem({\n  fieldName,\n  name,\n  type,\n  error,\n  ...props\n}: SignUpInputProps & Parameters<typeof Input>[0]) {\n  return (\n    <Wrap>\n      <label>\n        <span>{fieldName}</span>\n        <Input type={type} name={name} fullWidth {...props} />\n      </label>\n      <div className=\"error\">{error}</div>\n    </Wrap>\n  );\n}\n\nconst Wrap = styled.div`\n  label {\n    display: block;\n  }\n  .error {\n    margin-left: 16px;\n    margin-top: 4px;\n    color: red;\n    height: 24px;\n    box-sizing: border-box;\n  }\n  margin-bottom: 1em;\n`;\n\nexport default InputItem;\n","const color = {\n  primary: \"#00098b\",\n\n  isLight(colorCode: string) {\n    let code = colorCode;\n\n    if (colorCode[0] === \"#\") {\n      code = colorCode.slice(1);\n    }\n\n    const rgbAverage =\n      [code.slice(0, 2), code.slice(2, 4), code.slice(4, 6)]\n        .map((v) => parseInt(v, 16))\n        .reduce((a, b) => a + b, 0) / 3;\n    return rgbAverage > 120;\n  },\n};\n\nexport default color;\n","import styled, { css } from \"styled-components\";\nimport color from \"constants/color\";\n\ninterface ButtonProps {\n  block?: boolean;\n  fullWidth?: boolean;\n}\nconst Button = styled.button<ButtonProps>`\n  ${({ block, fullWidth }) =>\n    (block || fullWidth) &&\n    css`\n      display: block;\n    `}\n    ${({ fullWidth }) =>\n      fullWidth &&\n      css`\n        width: 100%;\n      `}\n    \n    background: ${color.primary};\n    color: ${color.isLight(color.primary) ? \"black\" : \"white\"};\n    font-size: 1rem;\n    border: 0;\n    padding: .5em 1em;\n    border-radius: 1em;\n\n    :focus, :active {\n        outline: 0;\n    }\n`;\n\nexport default Button;\n","const API_URL = \"https://typewriter-api.hadmarine.com/v1\";\n\nexport default API_URL;\n","import axios from \"axios\";\nimport API_URL from \"./url\";\n\nconst client = axios.create({\n  baseURL: API_URL,\n});\n\nexport function getNetworkError(e: any) {\n  if (e.response.data && e.response.data.message) {\n    return e.response.data;\n  }\n  return e;\n}\nexport default client;\n","import React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { Formik, FormikHelpers } from \"formik\";\nimport InputItem from \"components/elements/InputItem\";\nimport Button from \"components/elements/Button\";\nimport client from \"api/client\";\nimport { useHistory } from \"react-router-dom\";\n\nconst initialValues = {\n  email: \"\",\n  password: \"\",\n  passwordAccept: \"\",\n  username: \"\",\n  role: \"designer\",\n};\ntype ValueType = typeof initialValues;\n\nfunction SignUp() {\n  const history = useHistory();\n  const onSubmit = useCallback(\n    async (values: ValueType, helper: FormikHelpers<ValueType>) => {\n      if (\n        !values.email ||\n        !values.password ||\n        !values.passwordAccept ||\n        !values.role ||\n        !values.username\n      ) {\n        helper.setSubmitting(false);\n        return;\n      }\n\n      try {\n        const { email, password, role, username } = values;\n        await client.post(\"/user\", {\n          userid: email,\n          password,\n          nickname: username,\n          type: role,\n        });\n\n        alert(\"회원가입이 완료되었습니다.\");\n        history.replace(\"/login\");\n      } catch (e) {\n        alert(\"오류가 발생했습니다. 다시 시도해주세요.\");\n        console.error(e);\n      }\n    },\n    [history]\n  );\n  const validate = useCallback(\n    ({ email, password, passwordAccept }: ValueType, props: any) => {\n      const errors: any = {};\n      if (password && passwordAccept && password !== passwordAccept) {\n        errors.passwordAccept = \"비밀번호를 다시 확인해주세요.\";\n      }\n      if (\n        !email.match(\n          /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i\n        )\n      )\n        errors.email = \"이메일이 형식에 맞지 않습니다.\";\n      return errors;\n    },\n    []\n  );\n  return (\n    <Formik\n      onSubmit={onSubmit}\n      initialValues={initialValues}\n      validate={validate as any}\n    >\n      {({\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        setFieldValue,\n        values,\n        errors,\n        isSubmitting,\n      }) => (\n        <Form onSubmit={handleSubmit}>\n          <InputItem\n            fieldName=\"이메일\"\n            name=\"email\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={errors.email}\n            value={values.email}\n          />\n          <InputItem\n            fieldName=\"비밀번호\"\n            name=\"password\"\n            type=\"password\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={errors.password}\n            value={values.password}\n          />\n          <InputItem\n            fieldName=\"비밀번호 확인\"\n            name=\"passwordAccept\"\n            type=\"password\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={errors.passwordAccept}\n            value={values.passwordAccept}\n          />\n          <InputItem\n            fieldName=\"닉네임\"\n            name=\"username\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={errors.username}\n            value={values.username}\n          />\n          <div className=\"select-role\">\n            <label>\n              <input\n                type=\"radio\"\n                name=\"role\"\n                value=\"designer\"\n                checked={values.role === \"designer\"}\n                onChange={() => setFieldValue(\"role\", \"designer\")}\n              />\n              디자이너\n            </label>\n            <label>\n              <input\n                type=\"radio\"\n                name=\"client\"\n                value=\"designer\"\n                checked={values.role === \"client\"}\n                onChange={() => setFieldValue(\"role\", \"client\")}\n              />\n              클라이언트\n            </label>\n          </div>\n          <Button fullWidth disabled={isSubmitting}>\n            회원가입\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nconst Form = styled.form`\n  .select-role {\n    margin-bottom: 24px;\n    label {\n      display: block;\n    }\n  }\n`;\n\nexport default SignUp;\n","import { useSelector } from \"react-redux\";\nimport { RootState } from \"store\";\nimport { useHistory } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nfunction useIsLogin() {\n  // TODO: Redux 스토어를 통해 로그인 확인 구현\n  const { accessToken, refreshToken } = useSelector(\n    (state: RootState) => state.auth\n  );\n  return !!(accessToken && refreshToken);\n}\n\nexport function useIsLoginRedirect(to: string = \"/\") {\n  const history = useHistory();\n  const isLogin = useIsLogin();\n\n  useEffect(() => {\n    isLogin && history.replace(to);\n  }, [isLogin, history, to]);\n}\n\nexport default useIsLogin;\n","import React from \"react\";\nimport { css } from \"styled-components\";\nimport Page from \"components/elements/Page\";\nimport SignUpForm from \"components/auth/SignUp\";\nimport { useIsLoginRedirect } from \"hooks/useIsLogin\";\nfunction SignUpPage() {\n  useIsLoginRedirect();\n  return (\n    <Page css={style}>\n      <h1>회원가입</h1>\n      <SignUpForm />\n    </Page>\n  );\n}\n\nconst style = css`\n  max-width: 500px;\n  margin: auto;\n`;\n\nexport default SignUpPage;\n","import client, { getNetworkError } from \"./client\";\n\nexport async function login({\n  email,\n  password,\n}: {\n  email: string;\n  password: string;\n}) {\n  try {\n    const request = await client.post(\"/auth\", { userid: email, password });\n    const { access, refresh } = request.data.data.token;\n\n    localStorage.setItem(\"accessToken\", access);\n    localStorage.setItem(\"refreshToken\", refresh);\n\n    return { accessToken: access, refreshToken: refresh };\n  } catch (e) {\n    throw getNetworkError(e);\n  }\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\ninterface AuthType {\n  accessToken?: string;\n  refreshToken?: string;\n}\nconst initialState: AuthType = {\n  accessToken: localStorage.getItem(\"accessToken\") || undefined,\n  refreshToken: localStorage.getItem(\"refreshToken\") || undefined,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  reducers: {\n    setToken(\n      state,\n      action: PayloadAction<{ accessToken: string; refreshToken: string }>\n    ) {\n      const { accessToken, refreshToken } = action.payload;\n      state.accessToken = accessToken;\n      state.refreshToken = refreshToken;\n    },\n  },\n});\n\nexport default authSlice;\n","import React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { Formik, FormikHelpers } from \"formik\";\nimport Input from \"components/elements/Input\";\nimport Button from \"components/elements/Button\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { login } from \"api/auth\";\nimport { useDispatch } from \"react-redux\";\nimport authSlice from \"store/auth\";\n\nconst initialValues = { email: \"\", password: \"\" };\ntype ValueType = typeof initialValues;\n\nfunction LogIn() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const onSubmit = useCallback(\n    async (values: ValueType, helper: FormikHelpers<ValueType>) => {\n      try {\n        const tokens = await login(values);\n        dispatch(authSlice.actions.setToken(tokens));\n        history.replace(\"/\");\n      } catch (e) {\n        if (e.code === \"LOGIN_FAIL\") {\n          alert(\"아이디나 비밀번호가 다릅니다.\");\n          return;\n        }\n        alert(\"오류가 발생했습니다. 다시 시도해주세요.\");\n      }\n    },\n    [history, dispatch]\n  );\n  return (\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\n      {({ isSubmitting, values, handleChange, handleBlur, handleSubmit }) => (\n        <Form onSubmit={handleSubmit}>\n          <label>\n            <span>이메일</span>\n            <Input\n              type=\"email\"\n              name=\"email\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n              fullWidth\n            />\n          </label>\n          <label>\n            <span>비밀번호</span>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n              fullWidth\n            />\n          </label>\n          <div className=\"button\">\n            <Button fullWidth disabled={isSubmitting}>\n              로그인\n            </Button>\n            <p>\n              또는 <Link to=\"/signup\">회원가입</Link>\n            </p>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nconst Form = styled.form`\n  > label {\n    display: block;\n    margin-bottom: 8px;\n  }\n  .button {\n    text-align: center;\n  }\n`;\nexport default LogIn;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport LogIn from \"components/auth/LogIn\";\nimport logo from \"assets/logo.png\";\nimport media from \"constants/media\";\nimport { useIsLoginRedirect } from \"hooks/useIsLogin\";\n\nfunction IndexPage() {\n  useIsLoginRedirect();\n\n  return (\n    <Wrap>\n      <div className=\"logo\" role=\"img\" aria-label=\"Logo\" />\n      <div className=\"login-wrap\">\n        <LogIn />\n      </div>\n    </Wrap>\n  );\n}\n\nconst Wrap = styled.div`\n  height: 100vh;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  .logo {\n    width: 100%;\n    height: 200px;\n    display: block;\n    background: url(${logo}) no-repeat;\n    background-size: contain;\n    background-position: center;\n\n    @media screen and (max-width: ${media.small}) {\n      height: 150px;\n    }\n  }\n  .login-wrap {\n    width: 100%;\n    padding: 1em;\n    max-width: 500px;\n    box-sizing: border-box;\n  }\n`;\n\nexport default IndexPage;\n","import React, { createContext, useState, useCallback } from \"react\";\n\ntype ModalStateType = { [key: string]: boolean };\ninterface ModalContextType {\n  modal: ModalStateType;\n  changeState(key: string, value: boolean): void;\n}\nexport const ModalContext = createContext<ModalContextType>({\n  modal: {},\n  changeState() {},\n});\nfunction ModalProvider({ children }: { children?: React.ReactNode }) {\n  const [modal, setModal] = useState<ModalStateType>({});\n  const changeState = useCallback((key: string, value: boolean) => {\n    setModal((modal) => ({\n      ...modal,\n      [key]: value,\n    }));\n  }, []);\n  return (\n    <ModalContext.Provider value={{ modal, changeState }}>\n      {children}\n    </ModalContext.Provider>\n  );\n}\n\nexport default ModalProvider;\n","import { useContext, useCallback } from \"react\";\nimport { ModalContext } from \"components/modal/ModalProvider\";\n\nfunction useModal(modalName: string) {\n  const { modal, changeState } = useContext(ModalContext);\n  const isShow = !!modal[modalName];\n  const close = useCallback(() => {\n    changeState(modalName, false);\n  }, [changeState, modalName]);\n  const show = useCallback(() => {\n    changeState(modalName, true);\n  }, [changeState, modalName]);\n  return { isShow, close, show };\n}\n\nexport default useModal;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport useModal from \"hooks/useModal\";\n\ninterface ModalProps {\n  modalName: string;\n  children?: (close: () => void) => React.ReactElement;\n}\n\nfunction Modal({ modalName, children }: ModalProps) {\n  const { isShow, close } = useModal(modalName);\n\n  if (!isShow) return null;\n  return (\n    <Background>\n      <div className=\"close\" onClick={close}></div>\n      {children && children(close)}\n    </Background>\n  );\n}\n\nconst Background = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  z-index: 3000;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  & > .close {\n    z-index: -1;\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n`;\n\nexport default Modal;\n","import React from \"react\";\nimport styled, { css } from \"styled-components\";\n\ninterface ProfileStyleProps {\n  size?: string;\n}\nfunction Profile({ ...props }: ProfileStyleProps) {\n  return <Wrap role=\"img\" aria-label=\"profile\" {...props}></Wrap>;\n}\n\nconst Wrap = styled.div<ProfileStyleProps>`\n  ${({ size }) => css`\n    width: ${size || \"76px\"};\n    height: ${size || \"76px\"};\n    border-radius: ${size || \"38px\"};\n  `}\n  background: gray;\n`;\n\nexport default Profile;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Modal from \"./Modal\";\nimport media from \"constants/media\";\nimport Profile from \"components/user/Profile\";\nimport { Link } from \"react-router-dom\";\n\nfunction MenuModal() {\n  return (\n    <Modal modalName=\"menu\">\n      {() => (\n        <Menu>\n          <Link to=\"/profile\" className=\"profile\">\n            <Profile size=\"50px\" />\n            <h3 className=\"username\">Username</h3>\n          </Link>\n          <div className=\"menu-list\">\n            <Link to=\"/write\" className=\"menu-item\">\n              입찰 등록\n            </Link>\n            <Link to=\"/bid\" className=\"menu-item\">\n              입찰 보기\n            </Link>\n            <Link to=\"/\" className=\"menu-item\">\n              디자인 보기\n            </Link>\n            <Link to=\"/write-project\" className=\"menu-item\">\n              내 프로젝트 업로드\n            </Link>\n          </div>\n        </Menu>\n      )}\n    </Modal>\n  );\n}\n\nconst Menu = styled.div`\n  background: white;\n  width: 50%;\n  max-width: 480px;\n  padding: 1.5em;\n  padding-top: 3em;\n\n  .profile {\n    display: flex;\n    color: black;\n    align-items: center;\n    .username {\n      margin: 0;\n      margin-left: 0.75em;\n    }\n  }\n  .menu-list {\n    margin-top: 2em;\n    .menu-item {\n      display: block;\n      padding: 1em;\n      color: black;\n      transition: background 0.5s;\n      border-radius: 8px;\n      :hover {\n        background: #eaeaea;\n        cursor: pointer;\n      }\n    }\n  }\n\n  @media screen and (max-width: ${media.small}) {\n    width: 70%;\n  }\n`;\n\nexport default MenuModal;\n","import React from \"react\";\nimport MenuModal from \"./modal/MenuModal\";\n\nfunction Modals() {\n  return (\n    <>\n      <MenuModal />\n    </>\n  );\n}\nexport default Modals;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { MdSearch } from \"react-icons/md\";\nimport Input from \"components/elements/Input\";\n\nfunction Search() {\n  return (\n    <Wrap>\n      <Input fullWidth />\n      <button className=\"button\" type=\"submit\">\n        <MdSearch />\n      </button>\n    </Wrap>\n  );\n}\n\nconst Wrap = styled.form`\n  position: relative;\n\n  .button {\n    color: gray;\n    background: none;\n    border: 0;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 20px;\n\n    :active,\n    :focus {\n      outline: 0;\n    }\n  }\n`;\n\nexport default Search;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { css } from \"styled-components\";\nimport { MdMenu } from \"react-icons/md\";\nimport logo from \"assets/logo.png\";\nimport Page from \"./elements/Page\";\nimport media from \"constants/media\";\nimport Modals from \"./Modals\";\nimport useModal from \"hooks/useModal\";\nimport Search from \"./search/Search\";\nimport useIsLogin from \"hooks/useIsLogin\";\n\ninterface LayoutProps {\n  children?: React.ReactNode;\n}\nfunction Layout({ children }: LayoutProps) {\n  const menuModal = useModal(\"menu\");\n  const isLogin = useIsLogin();\n\n  return (\n    <Page css={style}>\n      <header className=\"header\">\n        <div className=\"left\">\n          <Link to=\"/\">\n            <div className=\"logo\" role=\"img\" aria-label=\"logo\" />\n          </Link>\n        </div>\n        <div className=\"right\">\n          {!isLogin && (\n            <>\n              <Link to=\"/login\">로그인</Link>\n              <Link to=\"/signup\">회원가입</Link>\n            </>\n          )}\n        </div>\n      </header>\n      <div className=\"search-wrap\">\n        <Search />\n      </div>\n      <div className=\"menu-wrap\">\n        <button className=\"menu-button\" onClick={menuModal.show}>\n          <MdMenu />\n        </button>\n      </div>\n      <article className=\"main\">{children}</article>\n      <Modals />\n    </Page>\n  );\n}\n\nconst style = css`\n  padding-top: 24px;\n\n  > .header {\n    display: flex;\n    align-items: center;\n    > .left .logo {\n      display: block;\n      background: url(${logo}) no-repeat;\n      background-size: 100%;\n      background-position: center;\n      width: 200px;\n      height: 60px;\n\n      @media screen and (max-width: ${media.small}) {\n        width: 100px;\n        height: 30px;\n      }\n    }\n    > .right {\n      flex: 1;\n      display: flex;\n      justify-content: flex-end;\n      * {\n        margin-right: 1em;\n        color: black;\n      }\n    }\n  }\n  > .menu-wrap {\n    margin-bottom: 1em;\n    margin-top: 1.5em;\n    margin-left: 24px;\n    .menu-button {\n      background: none;\n      border: 0;\n      font-size: 36px;\n      cursor: pointer;\n\n      :active,\n      :focus {\n        outline: 0;\n      }\n    }\n  }\n  > .search-wrap {\n    margin-top: 1em;\n  }\n`;\nexport default Layout;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport media from \"constants/media\";\nimport { Link } from \"react-router-dom\";\nfunction Art({\n  _id,\n  title,\n  image,\n}: {\n  _id: string;\n  title: string;\n  image: string;\n}) {\n  return (\n    <Link to={\"/project/\" + _id}>\n      <ArtDiv image={image} role=\"img\" aria-label={title} />\n    </Link>\n  );\n}\n\nconst ArtDiv = styled.div<{ image: string }>`\n  background: url(${({ image }) => image}) no-repeat;\n  background-size: cover;\n  background-position: center;\n  border-radius: 8px;\n  width: 300px;\n  height: 300px;\n\n  @media screen and (max-width: 829px) {\n    width: 100%;\n  }\n  @media screen and (max-width: ${media.small}) {\n    height: 200px;\n  }\n`;\n\nexport default Art;\n","import { useSelector } from \"react-redux\";\nimport { RootState } from \"store\";\nimport { useMemo } from \"react\";\nimport axios from \"axios\";\nimport API_URL from \"api/url\";\n\nfunction useClient() {\n  const token = useSelector((state: RootState) => state.auth.accessToken);\n  const client = useMemo(\n    () =>\n      axios.create({\n        baseURL: API_URL,\n        headers: {\n          \"x-access-token\": token,\n        },\n      }),\n    [token]\n  );\n\n  return client;\n}\n\nexport default useClient;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"react-query\";\nimport Art from \"./Art\";\nimport useClient from \"hooks/useClient\";\nfunction Arts() {\n  const client = useClient();\n  const { data, isLoading, error } = useQuery(\"arts\", () =>\n    client.get(\"/work?limit=20\")\n  );\n  if (error) return <div>Error: {error}</div>;\n  if (isLoading) return <div>Loading...</div>;\n  return (\n    <Wrap>\n      {data &&\n        data.data.data.map((props: any) => <Art key={props._id} {...props} />)}\n    </Wrap>\n  );\n}\n\nconst Wrap = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n\n  & > * {\n    margin: 1em;\n  }\n`;\n\nexport default Arts;\n","import React from \"react\";\nimport Layout from \"components/Layout\";\nimport Arts from \"components/arts/Arts\";\n\nfunction IndexPage() {\n  return (\n    <Layout>\n      <Arts />\n    </Layout>\n  );\n}\n\nexport default IndexPage;\n","import styled, { css } from \"styled-components\";\nimport { InputProps } from \"./Input\";\n\nconst Textarea = styled.textarea<InputProps>`\n  border: 0;\n  padding: 1em 1.5em;\n  background: #f2f2f2;\n  box-sizing: border-box;\n  border-radius: 1em;\n  ${({ shadow }) =>\n    shadow &&\n    css`\n      box-shadow: 2px 2px 5px -1px ${typeof shadow === \"string\" ? shadow : \"#f2f2f2\"};\n    `}\n    ${({ fullWidth, block }) =>\n      (fullWidth || block) &&\n      css`\n        display: block;\n      `}\n    ${({ fullWidth }) =>\n      fullWidth &&\n      css`\n        width: 100%;\n      `}\n  :focus {\n    outline: 0;\n  }\n`;\n\nexport default Textarea;\n","import React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { Formik, FormikHelpers } from \"formik\";\nimport Input from \"components/elements/Input\";\nimport Textarea from \"components/elements/Textarea\";\nimport Button from \"components/elements/Button\";\n\nconst initialValues = { title: \"\", letter: \"\", details: \"\", price: \"\" };\ntype ValueType = typeof initialValues;\n\nfunction WriteBid() {\n  const onSubmit = useCallback(\n    (values: ValueType, helper: FormikHelpers<ValueType>) => {},\n    []\n  );\n  return (\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\n      {({ isSubmitting, values, handleSubmit, handleBlur, handleChange }) => (\n        <Form onSubmit={handleSubmit}>\n          <div className=\"title-wrap\">\n            <Input\n              name=\"title\"\n              value={values.title}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              placeholder=\"입찰제목\"\n              fullWidth\n            />\n          </div>\n          <div className=\"letter\">\n            <Input\n              name=\"letter\"\n              value={values.letter}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              placeholder=\"쓸 글씨\"\n              fullWidth\n            />\n          </div>\n          <div className=\"contents\">\n            <Textarea\n              name=\"details\"\n              value={values.details}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              placeholder=\"세부사항\"\n              rows={20}\n              fullWidth\n            />\n          </div>\n          <div className=\"price-and-submit\">\n            <Input\n              name=\"price\"\n              value={values.price}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              placeholder=\"희망가\"\n              style={{ flex: 1 }}\n            />\n            <Button disabled={isSubmitting}>입찰</Button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nconst Form = styled.form`\n  > .contents,\n  > .price-and-submit {\n    margin-top: 1.5em;\n  }\n  > .price-and-submit {\n    display: flex;\n    button {\n      margin-left: 1em;\n    }\n  }\n  > .letter {\n    margin-top: 1em;\n  }\n`;\n\nexport default WriteBid;\n","import React from \"react\";\nimport Layout from \"components/Layout\";\nimport WriteBid from \"components/bid/WriteBid\";\nfunction WritePage() {\n  return (\n    <Layout>\n      <h1>입찰 등록</h1>\n      <WriteBid />\n    </Layout>\n  );\n}\n\nexport default WritePage;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"components/elements/Button\";\n\nfunction Bid() {\n  return (\n    <Card>\n      <h1 className=\"title\">제목</h1>\n      <p className=\"detail\">\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent nec\n        posuere elit, ut molestie turpis. Sed fermentum bibendum magna, nec\n        posuere odio imperdiet at. Sed accumsan orci nec tincidunt maximus...\n      </p>\n      <div className=\"price\">희망가 0원</div>\n      <div className=\"button\">\n        <Button className=\"bid-button\" fullWidth>\n          입찰 참가\n        </Button>\n      </div>\n    </Card>\n  );\n}\n\nconst Card = styled.div`\n  width: 200px;\n  margin: 1em;\n  padding: 1em;\n  background: #f2f2f2;\n  border-radius: 0.5em;\n\n  .price {\n    font-weight: bold;\n    font-size: 1.25em;\n    margin-bottom: 1rem;\n  }\n`;\n\nexport default Bid;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Bid from \"./Bid\";\n\nfunction BidList() {\n  return (\n    <List>\n      <Bid />\n      <Bid />\n      <Bid />\n      <Bid />\n      <Bid />\n      <Bid />\n      <Bid />\n      <Bid />\n      <Bid />\n      <Bid />\n      <Bid />\n      <Bid />\n      <Bid />\n    </List>\n  );\n}\n\nconst List = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport default BidList;\n","import React from \"react\";\nimport Layout from \"components/Layout\";\nimport BidList from \"components/bid/BidList\";\n\nfunction BidListPage() {\n  return (\n    <Layout>\n      <BidList />\n    </Layout>\n  );\n}\n\nexport default BidListPage;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Profile from \"components/user/Profile\";\n\nfunction ProfileBio() {\n  return (\n    <Bio>\n      <div className=\"image\">\n        <Profile size=\"120px\" />\n      </div>\n      <div className=\"info\">\n        <h1 className=\"name\">Username</h1>\n        <p className=\"introduce\">\n          Pariatur commodo et elit mollit ut Lorem sit ea cupidatat. Excepteur\n          ullamco id deserunt fugiat ea cupidatat. Esse in commodo ad amet\n          pariatur. Consequat in in ex nisi nisi in laboris nulla id.\n        </p>\n      </div>\n    </Bio>\n  );\n}\n\nconst Bio = styled.div`\n  display: flex;\n  align-items: center;\n  .info {\n    margin-left: 1em;\n  }\n`;\n\nexport default ProfileBio;\n","import React from \"react\";\nimport Layout from \"components/Layout\";\nimport ProfileBio from \"components/profile/ProfileBio\";\nimport Arts from \"components/arts/Arts\";\n\nfunction ProfilePage() {\n  return (\n    <Layout>\n      <ProfileBio />\n      <div style={{ marginTop: \"3em\" }}>\n        <Arts />\n      </div>\n    </Layout>\n  );\n}\n\nexport default ProfilePage;\n","import React, { useCallback } from \"react\";\nimport { Formik, FormikHelpers } from \"formik\";\nimport styled from \"styled-components\";\nimport Input from \"components/elements/Input\";\nimport Button from \"components/elements/Button\";\nimport Textarea from \"components/elements/Textarea\";\nimport useClient from \"hooks/useClient\";\nimport { useHistory } from \"react-router-dom\";\n\nconst initialValues: { title: string; details: string; image: File | null } = {\n  title: \"\",\n  details: \"\",\n  image: null,\n};\ntype ValueType = typeof initialValues;\nfunction WriteProject() {\n  const history = useHistory();\n  const client = useClient();\n  const onSubmit = useCallback(\n    async (values: ValueType, helper: FormikHelpers<ValueType>) => {\n      if (!values.title || !values.image || !values.details) {\n        return;\n      }\n      const formData = new FormData();\n      formData.append(\"title\", values.title);\n      formData.append(\"description\", values.details);\n      formData.append(\"image\", values.image);\n\n      try {\n        const req = await client.post(\"/work\", formData);\n        const id = req.data.data._id;\n\n        history.push(\"/project/\" + id);\n      } catch (e) {\n        console.error(e);\n        alert(\"오류가 발생했습니다. 다시 시도해주세요.\");\n      }\n    },\n    [client, history]\n  );\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\n      {({\n        isSubmitting,\n        values,\n        setFieldValue,\n        handleSubmit,\n        handleBlur,\n        handleChange,\n      }) => (\n        <Form onSubmit={handleSubmit}>\n          <div className=\"title-wrap\">\n            <Input\n              name=\"title\"\n              value={values.title}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              placeholder=\"내 프로젝트 제목\"\n              fullWidth\n            />\n          </div>\n          <div className=\"file\">\n            <input\n              type=\"file\"\n              name=\"image\"\n              onChange={(e) =>\n                e.currentTarget.files &&\n                setFieldValue(\"image\", e.currentTarget.files[0])\n              }\n              accept=\"image/*\"\n            />\n          </div>\n          <div className=\"details\">\n            <Textarea\n              name=\"details\"\n              value={values.details}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              placeholder=\"세부사항\"\n              rows={20}\n              fullWidth\n            />\n          </div>\n          <div className=\"submit\">\n            <Button disabled={isSubmitting}>저장</Button>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nconst Form = styled.form`\n  .details,\n  .file {\n    margin-top: 1em;\n  }\n`;\n\nexport default WriteProject;\n","import React from \"react\";\nimport Layout from \"components/Layout\";\nimport WriteProject from \"components/arts/WriteProject\";\n\nfunction ProjectWritePage() {\n  return (\n    <Layout>\n      <h1>내 프로젝트 업로드</h1>\n      <WriteProject />\n    </Layout>\n  );\n}\n\nexport default ProjectWritePage;\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { useQuery } from \"react-query\";\nimport useClient from \"hooks/useClient\";\nimport Layout from \"components/Layout\";\nimport Arts from \"components/arts/Arts\";\n\nfunction ProjectPage({\n  match: {\n    params: { id },\n  },\n}: RouteComponentProps<{ id: string }>) {\n  const client = useClient();\n  const { data, error, isLoading } = useQuery([\"project\", id], () =>\n    client.get(\"/work/\" + id)\n  );\n\n  if (isLoading || !data) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  const { title, image, description } = data.data.data;\n  return (\n    <Layout>\n      <ArtSection>\n        <div className=\"image\">\n          <img src={image} alt={title} />\n        </div>\n        <div className=\"info\">\n          <h1 className=\"title\">{title}</h1>\n          <div className=\"description\">{description}</div>\n        </div>\n      </ArtSection>\n      <Arts />\n    </Layout>\n  );\n}\n\nconst ArtSection = styled.section`\n  .image {\n    img {\n      width: 100%;\n      height: auto;\n    }\n  }\n`;\nexport default ProjectPage;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport SignUp from \"./SignUpPage\";\nimport LoginPage from \"./LoginPage\";\nimport IndexPage from \"./IndexPage\";\nimport WritePage from \"./WritePage\";\nimport BidListPage from \"./BidListPage\";\nimport ProfilePage from \"./ProfilePage\";\nimport ProjectWritePage from \"./ProjectWritePage\";\nimport ProjectPage from \"./ProjectPage\";\n\nfunction Routes() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={IndexPage} exact />\n      <Route path=\"/login\" component={LoginPage} exact />\n      <Route path=\"/signup\" component={SignUp} exact />\n      <Route path=\"/write\" component={WritePage} exact />\n      <Route path=\"/bid\" component={BidListPage} exact />\n      <Route path=\"/profile\" component={ProfilePage} exact />\n      <Route path=\"/write-project\" component={ProjectWritePage} exact />\n      <Route path=\"/project/:id\" component={ProjectPage} exact />\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport Routes from \"./pages\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport authSlice from \"./auth\";\n\nconst reducer = combineReducers({\n  [authSlice.name]: authSlice.reducer,\n});\nexport type RootState = ReturnType<typeof reducer>;\n\nconst store = configureStore({\n  reducer,\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store\";\nimport ModalProvider from \"components/modal/ModalProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ModalProvider>\n        <HashRouter>\n          <App />\n        </HashRouter>\n      </ModalProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}