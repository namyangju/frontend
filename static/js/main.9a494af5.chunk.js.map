{"version":3,"sources":["assets/logo.png","components/elements/Page.tsx","components/elements/Input.tsx","components/elements/InputItem.tsx","constants/color.ts","components/elements/Button.tsx","components/auth/SignUp.tsx","router/SignUpPage.tsx","components/auth/LogIn.tsx","constants/media.ts","router/LoginPage.tsx","router/IndexPage.tsx","router/index.tsx","App.tsx","serviceWorker.ts","store/index.ts","index.tsx"],"names":["module","exports","Page","styled","div","css","Input","input","shadow","fullWidth","block","Wrap","InputItem","fieldName","name","type","error","props","className","color","primary","isLight","colorCode","code","slice","map","v","parseInt","reduce","a","b","Button","button","initialValues","email","password","passwordAccept","username","role","Form","form","SignUp","onSubmit","useCallback","values","helper","validate","errors","match","handleChange","handleBlur","handleSubmit","setFieldValue","isSubmitting","onChange","onBlur","value","checked","disabled","style","SignUpPage","LogIn","to","media","small","logo","IndexPage","aria-label","Routes","path","component","exact","LoginPage","App","Boolean","window","location","hostname","reducer","combineReducers","store","configureStore","ReactDOM","render","StrictMode","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.9a494af5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.40741e13.png\";","import styled, { FlattenSimpleInterpolation } from \"styled-components\";\n\ninterface PageProps {\n  css?: FlattenSimpleInterpolation;\n}\nconst Page = styled.div<PageProps>`\n  padding: 5vh 10%;\n  ${({ css }) => css}\n`;\n\nexport default Page;\n","import styled, { css } from \"styled-components\";\n\ninterface InputProps {\n  shadow?: boolean | string;\n  fullWidth?: boolean;\n  block?: boolean;\n}\nconst Input = styled.input<InputProps>`\n  border: 0;\n  padding: 1em 1.5em;\n  background: #f2f2f2;\n  box-sizing: border-box;\n  border-radius: 1em;\n  ${({ shadow }) =>\n    shadow &&\n    css`\n      box-shadow: 2px 2px 5px -1px ${typeof shadow === \"string\" ? shadow : \"#f2f2f2\"};\n    `}\n    ${({ fullWidth, block }) =>\n      (fullWidth || block) &&\n      css`\n        display: block;\n      `}\n    ${({ fullWidth }) =>\n      fullWidth &&\n      css`\n        width: 100%;\n      `}\n  :focus {\n    outline: 0;\n  }\n`;\n\nexport default Input;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Input from \"./Input\";\n\ninterface SignUpInputProps {\n  fieldName: string;\n  name: string;\n  type?: string;\n  error?: string;\n}\nfunction InputItem({\n  fieldName,\n  name,\n  type,\n  error,\n  ...props\n}: SignUpInputProps & Parameters<typeof Input>[0]) {\n  return (\n    <Wrap>\n      <label>\n        <span>{fieldName}</span>\n        <Input type={type} name={name} fullWidth {...props} />\n      </label>\n      <div className=\"error\">{error}</div>\n    </Wrap>\n  );\n}\n\nconst Wrap = styled.div`\n  label {\n    display: block;\n  }\n  .error {\n    margin-left: 16px;\n    margin-top: 4px;\n    color: red;\n    height: 24px;\n    box-sizing: border-box;\n  }\n  margin-bottom: 1em;\n`;\n\nexport default InputItem;\n","const color = {\n  primary: \"#00098b\",\n\n  isLight(colorCode: string) {\n    let code = colorCode;\n\n    if (colorCode[0] === \"#\") {\n      code = colorCode.slice(1);\n    }\n\n    const rgbAverage =\n      [code.slice(0, 2), code.slice(2, 4), code.slice(4, 6)]\n        .map((v) => parseInt(v, 16))\n        .reduce((a, b) => a + b, 0) / 3;\n    return rgbAverage > 120;\n  },\n};\n\nexport default color;\n","import styled, { css } from \"styled-components\";\nimport color from \"constants/color\";\n\ninterface ButtonProps {\n  block?: boolean;\n  fullWidth?: boolean;\n}\nconst Button = styled.button<ButtonProps>`\n  ${({ block, fullWidth }) =>\n    (block || fullWidth) &&\n    css`\n      display: block;\n    `}\n    ${({ fullWidth }) =>\n      fullWidth &&\n      css`\n        width: 100%;\n      `}\n    \n    background: ${color.primary};\n    color: ${color.isLight(color.primary) ? \"black\" : \"white\"};\n    font-size: 1rem;\n    border: 0;\n    padding: .5em 1em;\n    border-radius: 1em;\n\n    :focus, :active {\n        outline: 0;\n    }\n`;\n\nexport default Button;\n","import React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { Formik, FormikHelpers } from \"formik\";\nimport InputItem from \"components/elements/InputItem\";\nimport Button from \"components/elements/Button\";\n\nconst initialValues = {\n  email: \"\",\n  password: \"\",\n  passwordAccept: \"\",\n  username: \"\",\n  role: \"designer\",\n};\ntype ValueType = typeof initialValues;\n\nfunction SignUp() {\n  const onSubmit = useCallback(\n    (values: ValueType, helper: FormikHelpers<ValueType>) => {},\n    []\n  );\n  const validate = useCallback(\n    ({ email, password, passwordAccept }: ValueType, props: any) => {\n      const errors: any = {};\n      if (password && passwordAccept && password !== passwordAccept) {\n        errors.passwordAccept = \"비밀번호를 다시 확인해주세요.\";\n      }\n      if (\n        !email.match(\n          /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i\n        )\n      )\n        errors.email = \"이메일이 형식에 맞지 않습니다.\";\n      return errors;\n    },\n    []\n  );\n  return (\n    <Formik\n      onSubmit={onSubmit}\n      initialValues={initialValues}\n      validate={validate as any}\n    >\n      {({\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        setFieldValue,\n        values,\n        errors,\n        isSubmitting,\n      }) => (\n        <Form onSubmit={handleSubmit}>\n          <InputItem\n            fieldName=\"이메일\"\n            name=\"email\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={errors.email}\n            value={values.email}\n          />\n          <InputItem\n            fieldName=\"비밀번호\"\n            name=\"password\"\n            type=\"password\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={errors.password}\n            value={values.password}\n          />\n          <InputItem\n            fieldName=\"비밀번호 확인\"\n            name=\"passwordAccept\"\n            type=\"password\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={errors.passwordAccept}\n            value={values.passwordAccept}\n          />\n          <InputItem\n            fieldName=\"닉네임\"\n            name=\"username\"\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={errors.username}\n            value={values.username}\n          />\n          <div className=\"select-role\">\n            <label>\n              <input\n                type=\"radio\"\n                name=\"role\"\n                value=\"designer\"\n                checked={values.role === \"designer\"}\n                onChange={() => setFieldValue(\"role\", \"designer\")}\n              />\n              디자이너\n            </label>\n            <label>\n              <input\n                type=\"radio\"\n                name=\"client\"\n                value=\"designer\"\n                checked={values.role === \"client\"}\n                onChange={() => setFieldValue(\"role\", \"client\")}\n              />\n              클라이언트\n            </label>\n          </div>\n          <Button fullWidth disabled={isSubmitting}>\n            회원가입\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nconst Form = styled.form`\n  .select-role {\n    margin-bottom: 24px;\n    label {\n      display: block;\n    }\n  }\n`;\n\nexport default SignUp;\n","import React from \"react\";\nimport { css } from \"styled-components\";\nimport Page from \"components/elements/Page\";\nimport SignUpForm from \"components/auth/SignUp\";\nfunction SignUpPage() {\n  return (\n    <Page css={style}>\n      <h1>회원가입</h1>\n      <SignUpForm />\n    </Page>\n  );\n}\n\nconst style = css`\n  max-width: 500px;\n  margin: auto;\n`;\n\nexport default SignUpPage;\n","import React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { Formik, FormikHelpers } from \"formik\";\nimport Input from \"components/elements/Input\";\nimport Button from \"components/elements/Button\";\nimport { Link } from \"react-router-dom\";\n\nconst initialValues = { email: \"\", password: \"\" };\ntype ValueType = typeof initialValues;\n\nfunction LogIn() {\n  const onSubmit = useCallback(\n    (values: ValueType, helper: FormikHelpers<ValueType>) => {},\n    []\n  );\n  return (\n    <Formik initialValues={initialValues} onSubmit={onSubmit}>\n      {({ isSubmitting, values, handleChange, handleBlur, handleSubmit }) => (\n        <Form onSubmit={handleSubmit}>\n          <label>\n            <span>이메일</span>\n            <Input\n              type=\"email\"\n              name=\"email\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.email}\n              fullWidth\n            />\n          </label>\n          <label>\n            <span>비밀번호</span>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              onChange={handleChange}\n              onBlur={handleBlur}\n              value={values.password}\n              fullWidth\n            />\n          </label>\n          <div className=\"button\">\n            <Button fullWidth disabled={isSubmitting}>\n              로그인\n            </Button>\n            <p>\n              또는 <Link to=\"/signup\">회원가입</Link>\n            </p>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nconst Form = styled.form`\n  > label {\n    display: block;\n    margin-bottom: 8px;\n  }\n  .button {\n    text-align: center;\n  }\n`;\nexport default LogIn;\n","const media = {\n  small: \"400px\",\n};\n\nexport default media;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport LogIn from \"components/auth/LogIn\";\nimport logo from \"assets/logo.png\";\nimport media from \"constants/media\";\n\nfunction IndexPage() {\n  return (\n    <Wrap>\n      <div className=\"logo\" role=\"img\" aria-label=\"Logo\" />\n      <div className=\"login-wrap\">\n        <LogIn />\n      </div>\n    </Wrap>\n  );\n}\n\nconst Wrap = styled.div`\n  height: 100vh;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  .logo {\n    width: 100%;\n    height: 200px;\n    display: block;\n    background: url(${logo}) no-repeat;\n    background-size: contain;\n    background-position: center;\n\n    @media screen and (max-width: ${media.small}) {\n      height: 150px;\n    }\n  }\n  .login-wrap {\n    width: 100%;\n    padding: 1em;\n    max-width: 500px;\n    box-sizing: border-box;\n  }\n`;\n\nexport default IndexPage;\n","import React from \"react\";\nimport { css } from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport Page from \"components/elements/Page\";\nimport logo from \"assets/logo.png\";\nimport media from \"constants/media\";\n\nfunction IndexPage() {\n  return (\n    <Page css={style}>\n      <header className=\"header\">\n        <div className=\"left\">\n          <div className=\"logo\" role=\"img\" aria-label=\"logo\" />\n        </div>\n        <div className=\"right\">\n          <Link to=\"/login\">로그인</Link>\n          <Link to=\"/signup\">회원가입</Link>\n        </div>\n      </header>\n    </Page>\n  );\n}\n\nconst style = css`\n  padding-top: 24px;\n\n  .header {\n    display: flex;\n    align-items: center;\n    .logo {\n      display: block;\n      background: url(${logo}) no-repeat;\n      background-size: 100%;\n      background-position: center;\n      width: 200px;\n      height: 60px;\n\n      @media screen and (max-width: ${media.small}) {\n        width: 100px;\n        height: 30px;\n      }\n    }\n    .right {\n      flex: 1;\n      display: flex;\n      justify-content: flex-end;\n      * {\n        margin-right: 1em;\n        color: black;\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\nimport SignUp from \"./SignUpPage\";\nimport LoginPage from \"./LoginPage\";\nimport IndexPage from \"./IndexPage\";\n\nfunction Routes() {\n  return (\n    <Switch>\n      <Route path=\"/\" component={IndexPage} exact />\n      <Route path=\"/login\" component={LoginPage} exact />\n      <Route path=\"/signup\" component={SignUp} exact />\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport Routes from \"./router\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\n\nconst reducer = combineReducers({});\nexport type RootType = ReturnType<typeof reducer>;\n\nconst store = configureStore({\n  reducer,\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}